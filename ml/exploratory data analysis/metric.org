* Average Precision@K
AP@k = 1/k * sum(TP_seen(i)/i)

where: TP_seen = 0 if: i-th is False else: TP seen till i.

- ap@3 = 1/3(1/1+2/2+3/3) = 1 - все на месте
- ap@3 = 1/3(1/1+0+0) = 0.33 - угадан только на первом месте
- ap@3 = 1/3(0+0+1/3) = 0.11 - угадан на последнем месте

#+begin_src python :results output :exports both :session s1
import numpy as np
def apk(true, pred):
    pred_comp = np.zeros(pred.shape[0])
    it = np.nditer(true)
    for x in it:
        pred_comp[it.iterindex] = x in pred
    cum = (np.cumsum(pred_comp) / np.arange(1,pred_comp.shape[0] + 1)) * pred_comp
    res = np.sum(cum)/pred_comp.shape[0]
    return(res)

true=np.array([3,  2,  82])
pred=np.array([8,  10,  3])
res = apk(true, pred)
print(res)

true=np.array([3,  2,  82])
pred=np.array([82,  10,  11])
res = apk(true, pred)
print(res)
#+end_src

#+RESULTS:
: 0.3333333333333333
: 0.1111111111111111
** links
- https://habr.com/ru/companies/econtenta/articles/303458/
- https://medium.com/@misty.mok/how-mean-average-precision-at-k-map-k-can-be-more-useful-than-other-evaluation-metrics-6881e0ee21a9
- https://github.com/scikit-learn/scikit-learn/pull/4975
